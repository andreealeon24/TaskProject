// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tasks_Project.Models;

namespace Tasks_Project.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tasks_Project.Models.Data.StepsRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BigStepId")
                        .HasColumnType("int");

                    b.Property<int?>("LittleStepId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BigStepId");

                    b.HasIndex("LittleStepId");

                    b.ToTable("StepsRelations");
                });

            modelBuilder.Entity("Tasks_Project.Models.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsLittleStep")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("StepId")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StepId");

                    b.HasIndex("TaskId");

                    b.ToTable("Steps");
                });

            modelBuilder.Entity("Tasks_Project.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Tasks_Project.Models.Data.StepsRelation", b =>
                {
                    b.HasOne("Tasks_Project.Models.Step", "BigStep")
                        .WithMany()
                        .HasForeignKey("BigStepId");

                    b.HasOne("Tasks_Project.Models.Step", "LittleStep")
                        .WithMany()
                        .HasForeignKey("LittleStepId");

                    b.Navigation("BigStep");

                    b.Navigation("LittleStep");
                });

            modelBuilder.Entity("Tasks_Project.Models.Step", b =>
                {
                    b.HasOne("Tasks_Project.Models.Step", null)
                        .WithMany("LittleSteps")
                        .HasForeignKey("StepId");

                    b.HasOne("Tasks_Project.Models.Task", "Task")
                        .WithMany("Steps")
                        .HasForeignKey("TaskId");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Tasks_Project.Models.Step", b =>
                {
                    b.Navigation("LittleSteps");
                });

            modelBuilder.Entity("Tasks_Project.Models.Task", b =>
                {
                    b.Navigation("Steps");
                });
#pragma warning restore 612, 618
        }
    }
}
